#!/usr/bin/env bash
set -e

usage() {
  echo "Usage: gh contrib [--style <style>] --transparent-empty"
}

data=( $(gh api graphql -f query='{
  viewer {
    contributionsCollection {
      contributionCalendar {
        weeks {
          contributionDays {
            color
            contributionCount
          }
        }
      }
    }
  }
}' --cache 1m --jq '..|.color?, .contributionCount?' | grep .) )

style=block
transparent_empty=false
while [ $# -gt 0 ]; do
  case "$1" in
    -s|--style)
      style="$2"
      shift 2
      ;;
    --transparent-empty)
      transparent_empty=true
      shift
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    *)
      usage >&2
      exit 1
      ;;
  esac
done

case "$style" in
  block)
    block_full=" "
    block_empty="$block_full";;
  *)
    echo "error: style '$style' not recognized" >&2
    exit 1;;
esac

get_level() {
  if [ "$1" -eq 0 ]; then
    echo "0"
  elif [ "$1" -lt 2 ]; then
    echo "1"
  elif [ "$1" -lt 4 ]; then
    echo "2"
  elif [ "$1" -lt 8 ]; then
    echo "3"
  else
    echo "4"
  fi
}

get_color() {
  case "$1" in
    0)
      echo -e "\033[48;2;22;27;34m";;     # dark gray
    1)
      echo -e "\033[48;2;14;68;41m";;     # use --color-calendar-graph-day-L1-bg
    2)
      echo -e "\033[48;2;0;109;50m";;     # use --color-calendar-graph-day-L2-bg
    3)
      echo -e "\033[48;2;38;166;65m";;    # use --color-calendar-graph-day-L3-bg
    4)
      echo -e "\033[48;2;57;211;83m";;    # use --color-calendar-graph-day-L4-bg
  esac
}

display_label() {
  if [ "$1" -eq 0 ] && [ "$2" -eq 2 ]; then
    echo -n "Sun "
  elif [ "$1" -eq 1 ] && [ "$2" -eq 2 ]; then
    echo -n "Mon "
  elif [ "$1" -eq 2 ] && [ "$2" -eq 2 ]; then
    echo -n "Tue "
  elif [ "$1" -eq 3 ] && [ "$2" -eq 2 ]; then
    echo -n "Wed "
  elif [ "$1" -eq 4 ] && [ "$2" -eq 2 ]; then
    echo -n "Thu "
  elif [ "$1" -eq 5 ] && [ "$2" -eq 2 ]; then
    echo -n "Fri "
  elif [ "$1" -eq 6 ] && [ "$2" -eq 2 ]; then
    echo -n "Sat "
  elif [ "$2" -eq 0 ]; then
    printf " %2d" "$1"
  else
    echo -n "    "
  fi
}

space=" "
if [ -t 1 ] && [ "$(tput cols)" -lt 102 ]; then
  space=""
fi

current_week=$(($(date +%W) - 1))
month_labels=(" J" " F" " M" " A" " M" " J" " J" " A" " S" " O" " N" " D")

week_to_month_label() {
  adjusted_week=$(($1 - 52 + $current_week + 2))
  if [ "$adjusted_week" -lt 0 ]; then
    adjusted_week=$(($adjusted_week + 52))
  fi

  case $adjusted_week in
    0) echo -n "J";;
    4) echo -n "F";;
    8) echo -n "M";;
    13) echo -n "A";;
    17) echo -n "M";;
    21) echo -n "J";;
    26) echo -n "J";;
    30) echo -n "A";;
    34) echo -n "S";;
    39) echo -n "O";;
    43) echo -n "N";;
    47) echo -n "D";;
    *) echo -n " ";;
  esac

}

reset_color="\033[0m"

# print week labels
printf "    "
for w in $(seq 0 51); do
  month_label=$(week_to_month_label "$w")
  printf "%s" "$month_label"
done
printf "\n"

for d in $(seq 0 6); do
  display_label $d 2
  for w in $(seq 0 51); do
    index=$((w * 14 + d * 2))
    hex_color="${data[index]}"
    count="${data[index + 1]}"
    level=$(get_level "$count")
    color="$(get_color "$level")"

    if [ "$hex_color" = "#ebedf0" ]; then
      color="$(get_color "0")"
    fi
    
    if [ "$transparent_empty" = true ] && [ "$count" -eq 0 ]; then
      color=""
    fi
    printf "${color}${block_full}${reset_color}" 
  done
  printf "\n"
done
printf "\n"
